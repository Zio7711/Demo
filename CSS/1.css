/* Let's add the styles */

/* clear the default margin and padding */
* {
  margin: 0;
  padding: 0;
}

body {
  /* flex box to make the card center */
  display: flex;
  justify-content: center;
  align-items: center;
  height: 100vh;

  /* background color */
  background-image: linear-gradient(
    200deg,
    rgb(67, 185, 221),
    rgb(158, 47, 170)
  );

  /* it is not perfect yet, it looks a little bit weird */
  /* we add another property to make it look more natural */
  perspective: 1000px;
}

.card {
  position: relative;
  background-color: #fff;
  height: 450px;
  width: 300px;
  cursor: pointer;
  border-radius: 30px;

  box-shadow: 1px 1px 20px rgba(0, 0, 0, 0.1);

  /* now the animation always turns back to the original stage */
  /* add the forwards keywords to make it stop at the 100% */
  animation: reverse-rotate 1.2s cubic-bezier(0.66, -0.47, 0.33, 1.5) forwards;

  /* give the parent element a 3d box property, so that the child element */
  /* can go to the back, this property is added to the parent(card) element */
  /* but it influent the child element */
  transform-style: preserve-3d;
}

/* add the hover effect */
.card:hover {
  animation: rotate 1.2s cubic-bezier(0.66, -0.47, 0.33, 1.5) forwards;
}

.front,
.back {
  position: absolute;
  top: 0;
  left: 0;
  height: 100%;
  width: 100%;
  display: flex;
  flex-direction: column;
  justify-content: space-around;
  align-items: center;
  font-size: 1.5rem;

  background-color: #fff;
  border-radius: 30px;

  /* hide the back of the spinning div */
  backface-visibility: hidden;
}

/* rotate the back */
.back {
  transform: rotateY(180deg);
}

/* key frames */
@keyframes rotate {
  0% {
    transform: rotateY(0deg);
  }
  100% {
    transform: rotateY(180deg);
  }
}

@keyframes reverse-rotate {
  0% {
    transform: rotateY(180deg);
  }
  100% {
    transform: rotateY(0deg);
  }
}
